######################################################################
## filter ############################################################
filter(flights, month == 1 | day == 1)
library('nycflights13') # data to work with
library('nycflights13')
flights
filter(flights, month == 1 | day == 1)
arrange(flights, desc(dep_time))
mutate(flights, speed = distance / air_time * 60)
summarise(flights, delay = mean(dep_delay))
group_by(flights, dest) %>%
summarise(count = n(),
dist = mean(distance, na.rm = TRUE),
delay = mean(arr_delay, na.rm = TRUE)
group_by(flights, dest) %>%
summarise(count = n(),
dist = mean(distance, na.rm = TRUE),
delay = mean(arr_delay, na.rm = TRUE)
) %>%
print()
group_by(flights, dest) %>%
summarise(count = n(),
dist = mean(distance, na.rm = TRUE),
delay = mean(arr_delay, na.rm = TRUE)
) %>%
print(flights)
group_by(flights, dest) %>%
summarise(count = n(),
dist = mean(distance, na.rm = TRUE),
delay = mean(arr_delay, na.rm = TRUE)
) %>%
flights
group_by(flights, dest) %>%
summarise(count = n(),
dist = mean(distance, na.rm = TRUE),
delay = mean(arr_delay, na.rm = TRUE)
) %>%
print(flights)
flights
denver_delay <- flights %>%
select(-tailnum)
denver_delay <- flights %>%
select(-tailnum)
denver_delay
denver_dec_delay <- flights %>%         # create new variable, denver_dec_delay from flights dataframe
select(-tailnum) %>%                  # select all columns except tailnum (remove tailnumm)
filter(month == 12) %>%               # only analyze flights in december
arrange(desc(dep_time)) %>%
denver_dec_delay
denver_dec_delay <- flights %>%         # create new variable, denver_dec_delay from flights dataframe
select(-tailnum) %>%                  # select all columns except tailnum (remove tailnumm)
filter(month == 12) %>%               # only analyze flights in december
arrange(desc(dep_time))
denver_dec_delay
denver_dec_delay <- flights %>%         # create new variable, denver_dec_delay from flights dataframe
select(-tailnum) %>%                  # select all columns except tailnum (remove tailnumm)
filter(month == 12) %>%               # only analyze flights in december
arrange(desc(dep_delay))
denver_dec_delay
denver_dec_delay <- flights %>%                    # create new variable, denver_dec_delay from flights dataframe
select(-tailnum) %>%                             # select all columns except tailnum (remove tailnumm)
filter(month == 12) %>%                          # only analyze flights in december
arrange(desc(dep_delay))                         # sort by largest departure delays
mutate(speed = distance / (air_time / 60)) %>%
# complex inquiry ####################################################
denver_dec_delay <- flights %>%                    # create new variable, denver_dec_delay from flights dataframe
select(-tailnum) %>%                             # select all columns except tailnum (remove tailnumm)
filter(month == 12) %>%                          # only analyze flights in december
arrange(desc(dep_delay))                         # sort by largest departure delays
mutate(speed = distance / (air_time / 60))
denver_dec_delay
# complex inquiry ####################################################
denver_dec_delay <- flights %>%                    # create new variable, denver_dec_delay from flights dataframe
select(-tailnum) %>%                             # select all columns except tailnum (remove tailnumm)
filter(month == 12) %>%                          # only analyze flights in december
arrange(desc(dep_delay)) %>%                       # sort by largest departure delays
mutate(speed = distance / (air_time / 60))
denver_dec_delay
denver_dec_delay <- flights %>%                    # create new variable, denver_dec_delay from flights dataframe
select(-tailnum) %>%                             # select all columns except tailnum (remove tailnumm)
filter(month == 12) %>%                          # only analyze flights in december
arrange(desc(dep_delay)) %>%                     # sort by largest departure delays
mutate(speed = distance / (air_time / 60)) %>%
group_by(dest) %>%
summarise(count = n())
denver_dec_delay
# complex inquiry ####################################################
denver_dec_delay <- flights %>%                    # create new variable, denver_dec_delay from flights dataframe
select(-tailnum) %>%                             # select all columns except tailnum (remove tailnumm)
filter(month == 12) %>%                          # only analyze flights in december
arrange(desc(dep_delay)) %>%                     # sort by largest departure delays
mutate(speed = distance / (air_time / 60)) %>%
group_by(dest)
denver_dec_delay
denver_dec_delay <- flights %>%                    # create new variable, denver_dec_delay from flights dataframe
select(-tailnum) %>%                             # select all columns except tailnum (remove tailnumm)
filter(month == 12) %>%                          # only analyze flights in december
group_by(dest) %>%
summarise(delay = dep_delay) %>%
arrange(desc(delay))                           # sort by largest departure delays
denver_dec_delay
denver_dec_delay <- flights %>%                    # create new variable, denver_dec_delay from flights dataframe
select(-tailnum) %>%                             # select all columns except tailnum (remove tailnumm)
filter(month == 12) %>%                          # only analyze flights in december
group_by(dest) %>%
summarise(delay_half = dep_delay / 2) %>%
arrange(desc(dep_delay))                           # sort by largest departure delays
denver_dec_delay
denver_dec_delay <- flights %>%                    # create new variable, denver_dec_delay from flights dataframe
select(-tailnum) %>%                             # select all columns except tailnum (remove tailnumm)
filter(month == 12) %>%                          # only analyze flights in december
group_by(dest) %>%
summarise(delay_half = (dep_delay / 2)) %>%
arrange(desc(dep_delay))                           # sort by largest departure delays
denver_dec_delay
denver_dec_delay <- flights %>%                    # create new variable, denver_dec_delay from flights dataframe
select(-tailnum) %>%                             # select all columns except tailnum (remove tailnumm)
filter(month == 12 & dest == "DEN")
denver_dec_delay
denver_dec_delay <- flights %>%                    # create new variable, denver_dec_delay from flights dataframe
select(-tailnum) %>%                             # select all columns except tailnum (remove tailnumm)
filter(month == 12 day == 25 & dest == "DEN")
denver_dec_delay
denver_dec_delay <- flights %>%                    # create new variable, denver_dec_delay from flights dataframe
select(-tailnum) %>%                             # select all columns except tailnum (remove tailnumm)
filter(month == 12 & day == 25 & dest == "DEN")
denver_dec_delay
denver_dec_delay <- flights %>%                    # create new variable, denver_dec_delay from flights dataframe
select(-tailnum) %>%                             # select all columns except tailnum (remove tailnumm)
filter(month == 12 & day == 25 & dest == "DEN")
group_by(carrier)
summarise(delay = mean(dep_delay))
denver_dec_delay
denver_dec_delay <- flights %>%                    # create new variable, denver_dec_delay from flights dataframe
select(-tailnum) %>%                             # select all columns except tailnum (remove tailnumm)
filter(month == 12 & day == 25 & dest == "DEN") %>%
group_by(carrier) %>%
summarise(delay = mean(dep_delay))
denver_dec_delay
denver_dec_delay <- flights %>%                    # create new variable, denver_dec_delay from flights dataframe
select(-tailnum) %>%                             # select all columns except tailnum (remove tailnumm)
filter(month == 12 & day == 25 & dest == "DEN") %>%
group_by(carrier) %>%
summarise(delay = mean(dep_delay),
count = n())
denver_dec_delay
denver_dec_delay <- flights %>%                    # create new variable, denver_dec_delay from flights dataframe
select(-tailnum) %>%                             # select all columns except tailnum (remove tailnumm)
filter(month == 12 & day == 25 & dest == "DEN") %>%
group_by(carrier) %>%
summarise(count = n(),
avg_delay = mean(dep_delay)) %>%
arrange(desc(avg_delay)) %>%
den_xmas_delay
# complex inquiry ####################################################
denver_xmas_delay <- flights %>%                    # create new variable, denver_dec_delay from flights dataframe
select(-tailnum) %>%                             # select all columns except tailnum (remove tailnumm)
filter(month == 12 & day == 25 & dest == "DEN") %>%
group_by(carrier) %>%
summarise(count = n(),
avg_delay = mean(dep_delay)) %>%
arrange(desc(avg_delay)) %>%
den_xmas_delay
# complex inquiry ####################################################
denver_xmas_delay <- flights %>%                    # create new variable, denver_dec_delay from flights dataframe
select(-tailnum) %>%                             # select all columns except tailnum (remove tailnumm)
filter(month == 12 & day == 25 & dest == "DEN") %>%
group_by(carrier) %>%
summarise(count = n(),
avg_delay = mean(dep_delay)) %>%
arrange(desc(avg_delay))
den_xmas_delay
denver_xmas_delay <- flights %>%                    # create new variable, denver_dec_delay from flights dataframe
select(-tailnum) %>%                             # select all columns except tailnum (remove tailnumm)
filter(month == 12 & day == 25 & dest == "DEN") %>%
group_by(carrier) %>%
summarise(count = n(),
avg_delay = mean(dep_delay)) %>%
arrange(desc(avg_delay))
den_xmas_delay
denver_xmas_delay <- flights %>%                    # create new variable, denver_dec_delay from flights dataframe
select(-tailnum) %>%                             # select all columns except tailnum (remove tailnumm)
filter(month == 12 & day == 25 & dest == "DEN") %>%
group_by(carrier) %>%
summarise(count = n(),
avg_delay = mean(dep_delay)) %>%
arrange(desc(avg_delay))
denver_xmas_delay
denver_xmas_delay <- flights %>%                    # create new variable, denver_dec_delay from flights dataframe
select(-tailnum) %>%                             # select all columns except tailnum (remove tailnumm)
filter(month == 12 & day == 25 & dest == "DEN") %>%
group_by(carrier) %>%
summarise(num_flights = n(),
avg_delay = mean(dep_delay)) %>%
arrange(desc(avg_delay))
denver_xmas_delay
?read_csv
install.packages('readxl')
install.packages("readxl")
read_csv(readr_example("mtcars.csv"))
read_csv(readr_example("mtcars.csv"))
library('tidyverse')
read_csv(readr_example("mtcars.csv"))
table4a %>%
gather(`1999`, `2000`, key = "year", value = "cases")
?gather
?seperate
?spread
?left_join
?fill
?fill()
seperate()
?separate
table4a
table4a %>%
gather(`1999`, `2000`, key = "year", value = "cases")
table4a
tidy4a <- table4a %>%
gather(`1999`, `2000`, key = "year", value = "cases")
tidy4b <- table4b %>%
gather(`1999`, `2000`, key = "year", value = "population")
left_join(tidy4a, tidy4b)
table2
spread(table2, key = type, value = count)
table2
table3
table5
table5
table5 %>%
unite(century, year, sep = "")
table5
table5 %>%
unite(new, century, year, sep = "")
table5
table5 %>%
unite(full_year, century, year, sep = "")
?unite
tibble(x = c("a,b,c", "d,e", "f,g,i")) %>%
separate(x, c("one", "two", "three"), fill ="right")
# extra = "drop"
?str
vector <- c(1,2,3)
names(vector) <- c("one", "two", "three")
vector[1]
matrix_a <- matrix(1:9, byrow = TRUE, nrow = 3)
matrix_a
matrix_a[2,3]
names(vector) <- c("one", "two", "three")
?cbind
speed_vector <- c("fast", "slow", "slow", "fast", "insane")
factor_speed_vector <- factor(speed_vector,
ordered=TRUE,
levels=c("slow", "fast", "insane")
)
factor_speed_vector
# ordered factors
speed_vector <- c("fast", "slow", "slow", "fast", "insane")
factor_speed_vector <- factor(speed_vector,
ordered=TRUE,
levels=c("slow", "fast", "insane")
)
factor_speed_vector
# subsets
subset(factor_speed_vector, subset < "fast")
weather
library('tidyverse')
library('nycflights13')
weather
flights
weather_delay <- flights
weather_delay
weather
left_join(weather_delay, weather, by="day")
top_dest <- flights %>%
count(dest, sort = TRUE) %>%
head(10)
top_dest
# find flights that went to these top 10
flights %>%
filter(dest %in% top_dest$dest)
flights %>%
semi_join(top_dest)
library('tidyverse')
print("other important characters include \n and \t")
c("other important characters include \n and \t")
c("other important characters include \n and \t", "my\n")
new_line <- "\n"
new_line
str_length("Hello, world!")
str_c("x", "y", "z", sep=" and then "         # combines strings
str_c("x", "y", "z", sep=" and then ")         # combines strings
str_c("x", "y", "z", sep = " and then ")         # combines strings
x <- c("abc", NA)
str_c("|-", x, "-|")
str_c("|-", str_replace_na(x), "-|")
name <- "Fisher"
time_of_day <- "evening"
birthday <- FALSE
str_c(
"Good ", time_of_day, " ", name,
if (birthday) " and HAPPY BIRTHDAY",
"."
)
x <- c("Apple", "Banana", "Pear")
str_sub(x, 1, 3)
str_sub(x, -1, -3)
x <- c("Apple", "Banana", "Pear")
str_sub(x, 1, 3)
str_sub(x, -3, -1)
?paste
?paste0
str_c(c("x", "y", "z"), collapse = ", ")
str_c(c("x", "y", "z"), sep = ", ")
str_c(c("x", "y", "z"), sep = "1")
x <- "apple"
str_length(x)
x <- "apple"
(str_length(x) / 2) + 1
x <- c("apple", "banana", "pear")
str_view(x, "an")
str_view(x,"an")
install.packages('htmlwidgets')
library('htmlwidgets')
x <- c("apple", "banana", "pear")
str_view(x,"an")
str_view(x, ".a.")
str_view(x, "a$")
str_view(c("grey", "gray"), "gr(e|a)y")
x <- c("apple", "banana", "pear")
str_detect(x, "e")
sum(str_detect(words, "^t"))
mean(str_detect(words, "[aeiou]$"))
words
df %>%
mutate(
vowels = str_count(word, "[aeiou]"),
consonants = str_count(word, "[^aeiou]")
)
library('tidyverse')
words2 <- words %>%
mutate(
vowels = str_count(word, "[aeiou]"),
consonants = str_count(word, "[^aeiou]")
)
install.packages('tidyverse')
install.packages("tidyverse")
library('tidyverse')
words2 <- words %>%
mutate(
vowels = str_count(word, "[aeiou]"),
consonants = str_count(word, "[^aeiou]")
)
words2 <- words %>%
mutate(
vowels = str_count(word, "[aeiou]"),
consonants = str_count(word, "[^aeiou]")
)
words
length(sentences)
head(sentences)
month_levels <- c(
"Jan", "Feb", "Mar", "Apr", "May", "Jun",
"Jul", "Aug", "Sep", "Oct", "Nov", "Dec"
)
y1 <- factor(x1, levels = month_levels)
y1
sort(y1)
month_levels <- c(
"Jan", "Feb", "Mar", "Apr", "May", "Jun",
"Jul", "Aug", "Sep", "Oct", "Nov", "Dec"
)
y1 <- factor(x1, levels = month_levels)
install.packages('forcats')
install.packages("forcats")
library('forcats')
month_levels <- c(
"Jan", "Feb", "Mar", "Apr", "May", "Jun",
"Jul", "Aug", "Sep", "Oct", "Nov", "Dec"
)
y1 <- factor(x1, levels = month_levels)
y1
sort(y1)
# my variable recording months
x1 <- c("Dec", "Apr", "Jan", "Mar")
# creating a months factor
month_levels <- c(
"Jan", "Feb", "Mar", "Apr", "May", "Jun",
"Jul", "Aug", "Sep", "Oct", "Nov", "Dec"
)
y1 <- factor(x1, levels = month_levels)
y1
sort(y1)
gss_cat
gss_cat %>%
count(race)
library('tidyverse')
gss_cat %>%
count(race)
ggplot(gss_cat, aes(race)) +
geom_bar()
gss_cat %>%
count(rincome)
ggplot(gss_cat, aes(rincome)) +
geom_bar()
gss_cat %>%
count(relig)
?denom
forcats::denom
relig_summary <- gss_cat %>%
group_by(relig) %>%
summarise(
age = mean(age, na.rm = TRUE),
tvhours = mean(tvhours, na.rm = TRUE),
n = n()
)
ggplot(relig_summary, aes(tvhours, relig)) + geom_point()
ggplot(relig_summary, aes(tvhours, fct_reorder(relig, tvhours))) +
geom_point()
fct_relevel(rincome, "Not applicable")
ges_cat %>%
fct_relevel(rincome, "Not applicable")
gss_cat %>%
fct_relevel(rincome, "Not applicable")
gss_cat$rincome
gss_cat %>%
fct_relevel(rincome, Not applicable)
gss_cat %>%
fct_relevel(rincome, Not applicable)
gss_cat %>%
fct_relevel(rincome, "Not applicable")
knitr::opts_chunk$set(echo = TRUE)
library('tidyverse')
library('RColorBrewer')
getwd()
parks <- read_csv("../input/parks.csv")
parks <- read_csv("~/../input/parks.csv")
read_csv(parks.csv)
wd
getwd(0)
getwd()
setwd(input)
setwd(/input)
setwd("~/Documents/data_science/np_biodiversity/input")
setwd("~/Documents/data_science/np_biodiversity")
#parks <- read_csv("~/../input/parks.csv")
#species <- read_csv("~/../input/species.csv")
getwd()
read_csv("~/input/parks.csv")
read_csv("/input/parks.csv")
setwd(/input/)
setwd("input")
getwd()
setwd("~/Documents/data_science/np_biodiversity")
#parks <- read_csv("~/../input/parks.csv")
#species <- read_csv("~/../input/species.csv")
getwd()
setwd("~/Documents/data_science/np_biodiversity")
library(readr)
parks <- read_csv("input/parks.csv")
View(parks)
# Looks like we're going to have to cut out Hawaii and Alaska
# because ggplot2 doesn't support these states...
lower_48_mapped <- parks %>%
filter(State != "AK" & State != "HI") %>%
ggplot(aes(Longitude, Latitude)) +
borders("state") +
geom_point(
aes(
size=Acres,
color=Acres
)
) +
coord_quickmap() +
labs(title="Continental U.S. National Parks",
subtitle="Size and Location",
caption="source: Kaggle biodiversity dataset"
) +
scale_size_continuous(
range=c(3,9),
guide=FALSE) +
scale_colour_distiller(name = "Square Acres",
breaks=c(1e+06, 2e+06, 3e+06, 4e+06),
labels=c("1 Million", "2 Million", "3 Million", "4 Million"),
palette="Spectral")
install.packages(maps)
install.packages('maps')
library('maps')
# Looks like we're going to have to cut out Hawaii and Alaska
# because ggplot2 doesn't support these states...
lower_48_mapped <- parks %>%
filter(State != "AK" & State != "HI") %>%
ggplot(aes(Longitude, Latitude)) +
borders("state") +
geom_point(
aes(
size=Acres,
color=Acres
)
) +
coord_quickmap() +
labs(title="Continental U.S. National Parks",
subtitle="Size and Location",
caption="source: Kaggle biodiversity dataset"
) +
scale_size_continuous(
range=c(3,9),
guide=FALSE) +
scale_colour_distiller(name = "Square Acres",
breaks=c(1e+06, 2e+06, 3e+06, 4e+06),
labels=c("1 Million", "2 Million", "3 Million", "4 Million"),
palette="Spectral")
lower_48_mapped
